CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name  VARCHAR(64)                             NOT NULL,
    email VARCHAR(128)                            NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);


CREATE TABLE IF NOT EXISTS categories
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(256)                            NOT NULL,
    CONSTRAINT pk_categories PRIMARY KEY (id),
    CONSTRAINT uq_categories_name UNIQUE (name)
);


CREATE TABLE IF NOT EXISTS events
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation         VARCHAR(2048)                           NOT NULL,
    category_id        BIGINT                                  NOT NULL,
    created_on         TIMESTAMP                               NOT NULL,
    description        VARCHAR(2048)                           NOT NULL,
    event_date         TIMESTAMP                               NOT NULL,
    initiator_id       BIGINT                                  NOT NULL,
    paid               BOOLEAN                                 NOT NULL,
    participant_limit  BIGINT  DEFAULT 0,
    published_on       TIMESTAMP,
    state              VARCHAR(16)                             NOT NULL,
    request_moderation BOOLEAN DEFAULT TRUE,
    title              VARCHAR(2048),
    location_lat       FLOAT                                   NOT NULL,
    location_lon       FLOAT                                   NOT NULL,
    confirmed_requests BIGINT  DEFAULT 0,
    CONSTRAINT pk_events PRIMARY KEY (id),
    CONSTRAINT fk_events_initiator_id FOREIGN KEY (initiator_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT fk_events_category_id FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE
);

CREATE INDEX IF NOT EXISTS fk_events_index_initiator_id ON events (initiator_id);
CREATE INDEX IF NOT EXISTS fk_events_index_category_id ON events (category_id);


CREATE TABLE IF NOT EXISTS compilations
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned BOOLEAN                                 NOT NULL,
    title  VARCHAR(2048)                           NOT NULL,
    CONSTRAINT pk_compilations PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS estimations
(
    event_id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    estimation INTEGER,
    CONSTRAINT fk_estimations_event_id FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    CONSTRAINT fl_estimations_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT pk_estimations PRIMARY KEY (event_id, user_id)
);

CREATE INDEX IF NOT EXISTS fk_estimations_index_event_id ON estimations (event_id);
CREATE INDEX IF NOT EXISTS fk_estimations_index_user_id ON estimations (user_id);


CREATE TABLE IF NOT EXISTS events_compilations
(
    event_id       BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    compilation_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    CONSTRAINT fk_events_compilations_event_id FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    CONSTRAINT fk_events_compilations_compilation_id FOREIGN KEY (compilation_id) REFERENCES compilations (id) ON DELETE CASCADE,
    CONSTRAINT pk_compilations_and_events PRIMARY KEY (event_id, compilation_id)
);

CREATE INDEX IF NOT EXISTS fk_events_compilations_index_event_id ON events_compilations (event_id);
CREATE INDEX IF NOT EXISTS fk_events_compilations_index_event_id ON events_compilations (compilation_id);


CREATE TABLE IF NOT EXISTS requests
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created      TIMESTAMP                               NOT NULL,
    event_id     BIGINT                                  NOT NULL,
    requester_id BIGINT                                  NOT NULL,
    status       VARCHAR(16)                             NOT NULL,
    CONSTRAINT pk_requests PRIMARY KEY (id),
    CONSTRAINT fk_requests_event_id FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    CONSTRAINT fk_requests_requester FOREIGN KEY (requester_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE INDEX IF NOT EXISTS fk_requests_index_event_id ON requests (event_id);
CREATE INDEX IF NOT EXISTS fk_requests_index_requester ON requests (requester_id);


CREATE TABLE IF NOT EXISTS comments
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text      VARCHAR(2048)                           NOT NULL,
    writer_id BIGINT                                  NOT NULL,
    event_id  BIGINT                                  NOT NULL,
    visited   BOOLEAN                                 NOT NULL,
    written   TIMESTAMP                               NOT NULL,
    CONSTRAINT pk_comments PRIMARY KEY (id),
    CONSTRAINT fk_comments_event_id FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    CONSTRAINT fk_comments_writer_id FOREIGN KEY (writer_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE INDEX IF NOT EXISTS fk_comments_index_event_id ON comments (event_id);
CREATE INDEX IF NOT EXISTS fk_comments_index_writer_id ON comments (writer_id);


CREATE TABLE IF NOT EXISTS ratings
(
    comment_id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id      BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    like_dislike BOOLEAN,
    CONSTRAINT fk_ratings_comment_id FOREIGN KEY (comment_id) REFERENCES comments (id) ON DELETE CASCADE,
    CONSTRAINT fl_ratings_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT pk_ratings PRIMARY KEY (comment_id, user_id)
);

CREATE INDEX IF NOT EXISTS fk_ratings_index_comment_id ON ratings (comment_id);
CREATE INDEX IF NOT EXISTS fk_ratings_index_user_id ON ratings (user_id);
